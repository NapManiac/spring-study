<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.fly.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.fly.log.BeforeLog"/>
    <bean id="afterLog" class="com.fly.log.AfterLog"/>

    <!--第一种方式通过Spring API实现-->
    <!--aop的配置-->
    <!--<aop:config>

        &lt;!&ndash;切入点 expression:表达式匹配要执行的方法&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.fly.service.UserServiceImpl.*(..))"/>
        &lt;!&ndash;执行环绕; advice-ref执行方法 . pointcut-ref切入点&ndash;&gt;
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>

    </aop:config>-->


    <!--第二种方式自定义实现-->
    <!--注册bean-->
    <!--<bean id="diy" class="com.fly.diy.DiyPointcut"/>

    &lt;!&ndash;aop的配置&ndash;&gt;
    <aop:config>
        &lt;!&ndash;第二种方式：使用AOP的标签实现&ndash;&gt;
        <aop:aspect ref="diy">
            <aop:pointcut id="diyPointcut" expression="execution(* com.fly.service.UserServiceImpl.*(..))"/>
            <aop:before pointcut-ref="diyPointcut" method="before"/>
            <aop:after pointcut-ref="diyPointcut" method="after"/>
        </aop:aspect>
    </aop:config>-->

    <!--第三种方式:注解实现-->
    <bean id="annotationPointcut" class="com.fly.anno.AnnotationPointcut"/>
    <aop:aspectj-autoproxy/>


</beans>